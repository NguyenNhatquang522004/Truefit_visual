# utils.py - Simplified for VisualAgent only

from typing import Tuple, List

def classify_user_intent(
    user_message: str, 
    uploaded_files: List[str]
) -> Tuple[str, float]:
    """
    Classify user intent for VisualAgent only.
    Returns: (agent_name, confidence_score)
    
    Agent mapping:
    - "visual": VisualAgent (Furniture Placement + Virtual Try-on with 2 images)
    - "unclear": Need 2 images
    """
    msg = user_message.lower()
    
    # Check if 2 images uploaded
    if len(uploaded_files) == 2:
        # Check for furniture or fashion keywords
        furniture_kw = ['x√≥a', 'ƒë·∫∑t', 'thay', 'ph√≤ng', 'b√†n', 'gh·∫ø', 't·ªß', 'n·ªôi th·∫•t', 'sofa', 'k·ªá']
        fashion_kw = ['th·ª≠', 'm·∫∑c', '√°o', 'qu·∫ßn', 'ƒë·ªì', 'v√°y', 'jacket', 'dress', 'shirt', 'pants']
        
        has_furniture = any(kw in msg for kw in furniture_kw)
        has_fashion = any(kw in msg for kw in fashion_kw)
        
        if has_furniture or has_fashion:
            return ("visual", 0.9)
        # No keywords but 2 images uploaded - still visual
        return ("visual", 0.6)
    
    # Not enough images
    return ("unclear", 0.4)

def generate_clarification_prompt(uploaded_files: List[str], intent: str) -> str:
    """
    Generate clarification message for VisualAgent.
    """
    # Special case: 2 images but unclear intent
    if len(uploaded_files) == 2 and intent in ["unclear", "visual"]:
        return """ü§î B·∫°n mu·ªën:
1Ô∏è‚É£ ƒê·∫∑t n·ªôi th·∫•t v√†o ph√≤ng
2Ô∏è‚É£ Th·ª≠ qu·∫ßn √°o

Tr·∫£ l·ªùi: 1 ho·∫∑c 2"""
    
    # Need 2 images
    return """‚ö†Ô∏è C·∫ßn 2 ·∫£nh ƒë·ªÉ x·ª≠ l√Ω. Vui l√≤ng t·∫£i l√™n:
- ·∫¢nh 1: Ph√≤ng/ng∆∞·ªùi
- ·∫¢nh 2: S·∫£n ph·∫©m (n·ªôi th·∫•t/qu·∫ßn √°o)

T√¥i c√≥ th·ªÉ gi√∫p:
1Ô∏è‚É£ ƒê·∫∑t n·ªôi th·∫•t v√†o ph√≤ng
2Ô∏è‚É£ Th·ª≠ qu·∫ßn √°o ·∫£o"""
